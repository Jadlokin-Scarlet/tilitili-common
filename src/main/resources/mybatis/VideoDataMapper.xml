<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tilitili.common.mapper.VideoDataMapper">
	<resultMap id="VideoDataResultMap" type="com.tilitili.common.entity.VideoData">
	</resultMap>
	<select id="count" resultType="Integer">
		select count(1) from [video_data] left join video_info on video_data.av = video_info.av
		<where>
			<if test="av != null">
				and video_data.av = #{av}
			</if>
			<if test="issue != null">
				and video_data.issue = #{issue}
			</if>
			<if test="isDelete != null">
				and video_info.is_delete = #{isDelete}
			</if>
			<if test="name != null">
				and video_info.name like concat('%', #{name}, '%')
			</if>
			<if test="owner != null">
				and video_info.owner like concat('%', #{owner}, '%')
			</if>
			<if test="bv != null">
				and video_info.bv = #{bv}
			</if>
			<if test="type != null">
				and video_info.type = #{type}
			</if>
			<if test="copyright != null">
				and video_info.copyright = #{copyright}
			</if>
			<if test="status != null">
				and video_info.status = #{status}
			</if>
			<if test="hasRank != null">
				and video_data.rank != 0
			</if>
			<if test="firstType != null">
				and video_info.first_type = #{firstType}
			</if>
			<if test="minDuration != null">-- 大于
				and video_info.duration &gt;= #{minDuration}
			</if>
			<if test="maxDuration != null">-- 小于
				and video_info.duration &lt; #{maxDuration}
			</if>
			<if test="hasLevel != null">
				and video_data.level != 0
			</if>
		</where>
	</select>
	<select id="list" resultMap="VideoDataResultMap">
		select * from video_data left join video_info on video_data.av = video_info.av
		<where>
			<if test="av != null">
				and video_data.av = #{av}
			</if>
			<if test="issue != null">
				and video_data.issue = #{issue}
			</if>
			<if test="isDelete != null">
				and video_info.is_delete = #{isDelete}
			</if>
			<if test="name != null">
				and video_info.name like concat('%', #{name}, '%')
			</if>
			<if test="owner != null">
				and video_info.owner like concat('%', #{owner}, '%')
			</if>
			<if test="bv != null">
				and video_info.bv = #{bv}
			</if>
			<if test="type != null">
				and video_info.type = #{type}
			</if>
			<if test="copyright != null">
				and video_info.copyright = #{copyright}
			</if>
			<if test="status != null">
				and video_info.status = #{status}
			</if>
			<if test="hasRank != null">
				and video_data.rank != 0
			</if>
			<if test="firstType != null">
				and video_info.first_type = #{firstType}
			</if>
			<if test="minDuration != null">-- 大于
				and video_info.duration &gt;= #{minDuration}
			</if>
			<if test="maxDuration != null">-- 小于
				and video_info.duration &lt; #{maxDuration}
			</if>
			<if test="hasLevel != null">
				and video_data.level != 0
			</if>
		</where>
		<if test="isRandom == true">
			order by NEWID()
		</if>
		<if test="isRandom != true">
			<if test="sorter != null and sorted != null">
				order by [${sorter}] ${sorted}
			</if>
			<if test="sorter == null or sorted == null">
				order by video_data.av desc
			</if>
			<if test="subSorter != null and subSorted != null">
				, video_info.[${subSorter}] ${subSorted}
			</if>
		</if>
		<if test="start != null and pageSize != null">
			offset ${start} rows fetch next ${pageSize} rows only
		</if>
	</select>
	<select id="listDataFile" resultType="VideoData">
		select * from video_data left join video_info on video_data.av = video_info.av
		where video_data.level != 0 and video_data.issue = #{issue}
		order by point desc
	</select>
	<insert id="insert" keyProperty="id" parameterType="com.tilitili.common.entity.VideoData" useGeneratedKeys="true">
		insert into video_data (
		<trim suffixOverrides=",">
			<if test="av != null">av,</if>
			<if test="view != null">[view],</if>
			<if test="reply != null">reply,</if>
			<if test="favorite != null">favorite,</if>
			<if test="coin != null">coin,</if>
			<if test="page != null">[page],</if>
			<if test="point != null">[point],</if>
			<if test="rank != null">[rank],</if>
			<if test="issue != null">issue,</if>
			<if test="danmaku != null">danmaku,</if>
			<if test="share != null">[share],</if>
			<if test="like != null">[like],</if>
			<if test="dislike != null">dislike,</if>
			<if test="evaluation != null">evaluation,</if>
			<if test="level != null">level,</if>
		</trim>
		) values (
		<trim suffixOverrides=",">
			<if test="av != null">#{av},</if>
			<if test="view != null">#{view},</if>
			<if test="reply != null">#{reply},</if>
			<if test="favorite != null">#{favorite},</if>
			<if test="coin != null">#{coin},</if>
			<if test="page != null">#{page},</if>
			<if test="point != null">#{point},</if>
			<if test="rank != null">#{rank},</if>
			<if test="issue != null">#{issue},</if>
			<if test="danmaku != null">#{danmaku},</if>
			<if test="share != null">#{share},</if>
			<if test="like != null">#{like},</if>
			<if test="dislike != null">#{dislike},</if>
			<if test="evaluation != null">#{evaluation},</if>
			<if test="level != null">#{level},</if>
		</trim>
		)
	</insert>
	<update id="update">
		update video_data
		<set>
			<if test="view != null">view = #{view},</if>
			<if test="reply != null">reply = #{reply},</if>
			<if test="favorite != null">favorite = #{favorite},</if>
			<if test="coin != null">coin = #{coin},</if>
			<if test="page != null">[page] = #{page},</if>
			<if test="point != null">[point] = #{point},</if>
			<if test="rank != null">[rank] = #{rank},</if>
			<if test="danmaku != null">danmaku = #{danmaku},</if>
			<if test="share != null">[share] = #{share},</if>
			<if test="like != null">[like] = #{like},</if>
			<if test="dislike != null">dislike = #{dislike},</if>
			<if test="evaluation != null">evaluation = #{evaluation},</if>
			<if test="level != null">level = #{level},</if>
		</set>
		where av = #{av} and issue = #{issue}
	</update>
	<select id="groupByIssue" resultType="VideoDataGroup">
		select
		    issue,
			sum([view]) as [view],
			sum(coin) as coin,
			sum(reply) as reply,
			sum(favorite) as favorite
		from video_data
		group by issue
		order by issue desc
		<if test="start != null and pageSize != null">
			offset ${start} rows fetch next ${pageSize} rows only
		</if>
	</select>
	<select id="randomRanked" resultMap="VideoDataResultMap">
		select top ${pageSize} *
		from (
		    select top 1000 * from video_data where video_data.issue = #{issue}
		) video_data
		left join video_info on video_data.av = video_info.av
		order by NEWID()
	</select>
</mapper>